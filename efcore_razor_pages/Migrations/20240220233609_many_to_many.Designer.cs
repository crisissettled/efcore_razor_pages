// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using efcore_razor_pages.MyModel;

#nullable disable

namespace efcore_razor_pages.Migrations
{
    [DbContext(typeof(SchoolContext))]
    [Migration("20240220233609_many_to_many")]
    partial class many_to_many
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeacherXuesheng", b =>
                {
                    b.Property<int>("TeacherssTeacherId")
                        .HasColumnType("int");

                    b.Property<int>("XueshengsXueshengId")
                        .HasColumnType("int");

                    b.HasKey("TeacherssTeacherId", "XueshengsXueshengId");

                    b.HasIndex("XueshengsXueshengId");

                    b.ToTable("T_Teacher_Xuesheng", (string)null);
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<string>("DeliveryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("T_Delivery", (string)null);
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("GradeId");

                    b.ToTable("T_Student", (string)null);
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Xuesheng", b =>
                {
                    b.Property<int>("XueshengId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("XueshengId"));

                    b.Property<string>("XueshengName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("XueshengId");

                    b.ToTable("T_Xuesheng", (string)null);
                });

            modelBuilder.Entity("TeacherXuesheng", b =>
                {
                    b.HasOne("efcore_razor_pages.MyModel.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeacherssTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("efcore_razor_pages.MyModel.Xuesheng", null)
                        .WithMany()
                        .HasForeignKey("XueshengsXueshengId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Delivery", b =>
                {
                    b.HasOne("efcore_razor_pages.MyModel.Order", "OrderObj")
                        .WithOne("DeliveryObj")
                        .HasForeignKey("efcore_razor_pages.MyModel.Delivery", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderObj");
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Student", b =>
                {
                    b.HasOne("efcore_razor_pages.MyModel.Grade", "Grade")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grade");
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Grade", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("efcore_razor_pages.MyModel.Order", b =>
                {
                    b.Navigation("DeliveryObj")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
